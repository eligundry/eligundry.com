---
import { Code } from 'astro:components'
import path from 'node:path'
import axios from 'axios'
import { FaGithub } from 'react-icons/fa'
import CodeWrapper from '../CodeWrapper.astro'

interface Props {
  url: string
  expandable?: boolean
  expanded?: boolean
}

const { url, expandable = true, expanded = false } = Astro.props

// Construct the url to the raw version of the file and ensure that we have a commit hash for the file instead of a main
// branch, as those can change and throw off the builds.
const rawURL = new URL(url)
rawURL.host = 'raw.githubusercontent.com'
const filename = path.basename(rawURL.pathname)

const [user, repo, _blob, ref, ...filePath] = rawURL.pathname
  .split('/')
  .filter(Boolean)

if (ref === 'master' || ref === 'main') {
  throw new Error(`Use a commit hash for githubFileEmbed "${url}"`)
}

rawURL.pathname = [user, repo, ref, ...filePath].join('/')

let range = null

if (rawURL.hash) {
  try {
    const matches = rawURL.hash.matchAll(/#L(\d+)-L(\d+)/g)
    // @ts-ignore
    const items = Array.from(...matches)

    if (items.length) {
      range = items
        .slice(1)
        .map((n, i) => (i === 0 ? parseInt(n) - 1 : parseInt(n)))
    }
  } catch (e) {}
}

const extension = filePath.at(-1)
  ? path.extname(filePath.at(-1) as string).slice(1)
  : undefined

let file = await axios
  .get<string>(rawURL.toString(), {
    responseType: 'text',
  })
  .then((resp) => resp.data)

let startingLineNumber = undefined

if (range) {
  file = file
    .split(/\r?\n/)
    .slice(...range)
    .join('\n')

  startingLineNumber = range[0]
}
---

<CodeWrapper
  startingLineNumber={startingLineNumber}
  lineNumbers
  expanded={expanded}
  expandable={expandable}
>
  <div slot="header" class="code-wrapper-header">
    <a
      href={url}
      target="_blank"
      class:list={['flex', 'flex-row', 'gap-2', 'items-center']}
    >
      <FaGithub />
      {filename}
    </a>
  </div>
  <div slot="code" class="astro-code">
    <Code code={file} lang={extension as any} theme="material-theme-lighter" />
  </div>
</CodeWrapper>
