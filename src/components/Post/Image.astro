---
import { getImage } from 'astro:assets'
import path from 'node:path'
import { averageColorFromURL } from '../../lib/images'

interface Props {
  alt: string
  src: ImageMetadata | string
}

const { alt, src } = Astro.props
const img = await getImage({
  src: src,
  format: 'webp',
  quality: 90,
  inferSize: true,
})

// console.log({src, img})
// let pathNameOrUrl: string
//
// if (typeof src === 'string') {
//   pathNameOrUrl = src
//
//   if (src.startsWith('/_astro')) {
//     pathNameOrUrl = path.join(process.cwd(), src)
//   }
// } else if (src.src.startsWith('/_astro/')) {
//     pathNameOrUrl = path.join(process.cwd(), src.src)
// } else if (src.src.startsWith('/@fs/')) {
//   const url = new URL(src.src.replace('/@fs', ''), img.src.startsWith('http') ? undefined : 'file:/')
//   pathNameOrUrl = url.pathname
// } else {
//   pathNameOrUrl = src.src
// }

// const backgroundColor = await averageColorFromURL(pathNameOrUrl)
const backgroundColor = null
---

<img
  src={img.src}
  width={img.options.width}
  height={img.options.height}
  alt={alt}
  style={{ backgroundColor }}
  decoding="async"
  loading="lazy"
  class:list={['max-w-100', 'mx-auto']}
/>
